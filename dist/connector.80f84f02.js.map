{"version":3,"sources":["../js/connector.js"],"names":["console","log","t","window","TrelloPowerUp","iframe","context","getContext","demandChangeCount","get","card","then","demandChangeCountInResponse","showDemandChangeCount","onBtnClick","opts","popup","title","url","cardButtons","text","icon","callback","condition","target","initialize","modal","fullscreen","cardName","dynamic","Math","random","toFixed","toString","color","refresh"],"mappings":";AAAAA,QAAQC,IAAI,gBAEZ,IAAMC,EAAIC,OAAOC,cAAcC,SACzBC,EAAUJ,EAAEK,aAClBP,QAAQC,IAAI,WAAWK,GACvB,IAAIE,EAAoBN,EAAEO,IAAIH,EAAQI,KAAM,SAAU,qBAAqBC,KAAK,SAAAC,GAC9EJ,EAAoBI,GAA4D,EAChFC,sBAAwCL,kBAAAA,OAAAA,MAMpCM,EAAa,SAASZ,EAAGa,GAEtBb,OADPF,QAAQC,IAAI,8BACLC,EAAEc,MAAM,CACbC,MAAO,gBACPC,IAAK,oCAIHC,EAAc,SAASjB,EAAGa,GACvB,MAAA,CAAC,CACNK,KAAM,iBACNC,KAAM,yGACNC,SAAUR,EACVS,UAAW,QACV,CACDH,KAAM,OACNG,UAAW,SACXC,OAAQ,2BAIZrB,OAAOC,cAAcqB,WACnB,CACkB,gBAAA,SAAUvB,EAAGa,GACpB,MAAA,CAAC,CACNK,KAAK,sBACLE,SAASpB,EAAEwB,MAAM,CACfT,MAAM,+BACNU,YAAW,OAIF,cAAA,SAASzB,EAAGa,GACzBb,EAAEO,MACoBP,EAAEQ,KAAK,eAEtBR,OAAAA,EAAEQ,KAAK,QACXD,IAAI,QACJE,KAAK,SAASiB,GAER,OADP5B,QAAQC,IAAI,cAAgB2B,GACrB,CACL,CACAC,QAAS,WACA,MAAA,CACLT,KAAM,WAA6B,IAAhBU,KAAKC,UAAgBC,QAAQ,GAAGC,WACnDC,MAAO,QACPC,QAAS,MAIb,CACEf,KAAM,SACNc,MAAO,UAICf,eAAAA,EACM,qBAAA,SAAUjB,EAAGa,GAC1Bb,OAAAA,EAAEQ,KAAK,QACTD,IAAI,QACJE,KAAK,SAAUiB,GACP,MAAA,CAAC,CACNC,QAAS,WACA,MAAA,CACLZ,MAAO,UACPG,KAAMZ,EAAkByB,WACxBC,MAAO,MACPC,QAAS","file":"connector.80f84f02.js","sourceRoot":"../src/html","sourcesContent":["console.log('Hello World!');\n\nconst t = window.TrelloPowerUp.iframe();\nconst context = t.getContext();\nconsole.log(\"context=\",context);\nlet demandChangeCount = t.get(context.card, 'shared', 'demandChangeCount').then(demandChangeCountInResponse => {\n  demandChangeCount = demandChangeCountInResponse ? demandChangeCountInResponse : 0;\n  showDemandChangeCount(`total changes: ${demandChangeCount}`);\n});\n// const onSaveBtnClicked = function (t, opts) {\n//   changingTimes = changingTimes + 1;\n// }\n\nconst onBtnClick = function(t, opts) {\n  console.log('Someone clicked the button');\n  return t.popup({\n    title: 'Demand Change',\n    url: './cardButtonRecordChanges.html'\n  });\n};\n\nconst cardButtons = function(t, opts) {\n  return [{\n    text: 'Demand Changes',\n    icon: 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Emoji_u1f601.svg/2048px-Emoji_u1f601.svg.png',\n    callback: onBtnClick,\n    condition: 'edit'\n  }, {\n    text: 'Open',\n    condition: 'always',\n    target: 'Trello Developer Site'\n  }];\n}\n\nwindow.TrelloPowerUp.initialize(\n  {\n    'board-buttons':function (t, opts) {\n      return [{\n        text:'Requirement Changes',\n        callback:t.modal({\n          title:'Requirement Changes Analysis',\n          fullscreen:true,\n        })\n      }];\n    },\n    'card-badges': function(t, opts) {\n      t.get();\n      let cardAttachments = t.card('attachments');\n      // let cardAttachments = opts.attachments;\n      return t.card(\"name\")\n        .get(\"name\")\n        .then(function(cardName) {\n        console.log('card name  ' + cardName);\n        return [\n          {\n          dynamic: function() {\n            return {\n              text: \"Dynamic\" + (Math.random() * 100).toFixed(0).toString(),\n              color: \"green\",\n              refresh: 10,\n            };\n          },\n        },\n          {\n            text: \"Static\",\n            color: null,\n          }];\n      });\n    },\n    'card-buttons': cardButtons,\n    'card-detail-badges': function (t, opts) {\n      return t.card('name')\n          .get('name')\n          .then(function (cardName) {\n            return [{\n              dynamic: function () {\n                return {\n                  title: 'Changes',\n                  text: demandChangeCount.toString(),\n                  color: 'red',\n                  refresh: 10\n                };\n              },\n            }]\n          })\n    },\n  }\n);\n"]}